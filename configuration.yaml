homeassistant:
  # Name of the location where Home Assistant is running
  name: Home
  # Location required to calculate the time the sun rises and sets
  latitude: !secret home_latitude
  longitude: !secret home_longitude
  # Impacts weather/sunrise data (altitude above sea level in meters)
  elevation: 0
  # metric for Metric, imperial for Imperial
  unit_system: imperial
  # Pick yours from here: http://en.wikipedia.org/wiki/List_of_tz_database_time_zones
  time_zone: America/New_York
  # Customization file
  customize: #!include customize.yaml
    sensor.house_entry_exit_recent_trigger:
      body: '<ommitted>'

# Configure a default setup of Home Assistant (frontend, api, etc)
default_config:

discovery:
    
# Show the introduction message on startup.
# introduction:

logger:
  default: warning
  #logs:
    #homeassistant.components.python_script: debug
    
# Uncomment this if you are using SSL/TLS, running in Docker container, etc.
# http:
#   base_url: example.duckdns.org:8123

# Sensors
sensor:
  # Weather prediction
  - platform: yr
  
  # Gmail - FrontPoint door sensor
  - platform: imap_email_content
    server: imap.gmail.com
    port: 993
    username: !secret gmail_username
    password: !secret gmail_password
    senders:
      - donotreply@frontpointsecurity.com
    name: house_entry_exit_recent_trigger
    value_template: >-
      {% if 'was Opened at' in subject %}
        {% if( states('sensor.house_entry_exit_recent_last_date') == 'unknown'
            or states('sensor.house_entry_exit_recent_last_date') == 'uninit'
            or states('sensor.house_entry_exit_recent_last_date') == ''
            or strptime(states('sensor.house_entry_exit_recent_last_date'),
                '%a, %d %b %Y %H:%M:%S %z')
              < strptime(date, '%a, %d %b %Y %H:%M:%S %z')) %}
          pending
        {% else %}
          nothing_new
        {% endif %}
      {% else %}
        no_emails
      {% endif %}
  - platform: template
    sensors:
      house_entry_exit_recent_last_date:
        value_template: >-
          {% if states('sensor.house_entry_exit_recent_last_date') == '' %}
            uninit
          {% else %}
            {{ states('sensor.house_entry_exit_recent_last_date') }}
          {% endif %}

# Text to speech
tts:
  - platform: google

group: !include groups.yaml
automation: !include automations.yaml
script: !include scripts.yaml

python_script:

panel_iframe:
  configurator:
    title: Configurator
    icon: mdi:wrench
    url: http://hassio.local:3218
    
#alarm_control_panel:
#  platform: alarmdotcom
#  username: !secret frontpoint_username
#  password: !secret frontpoint_password
#  name: FrontPoint

media_player:
  - platform: plex
    entity_namespace: 'plex'
    include_non_clients: true
    scan_interval: 5
    show_all_controls: false
    use_custom_entity_ids: true
    use_episode_art: true
    remove_unavailable_clients: false
    client_remove_interval: 600
